{"version":3,"file":"static/js/389.250d63ba.chunk.js","mappings":"sPACMA,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOC,EAAgB,mCAAG,6GAELC,EAAAA,EAAAA,IACrB,+DACAN,GAJ0B,cAEtBO,EAFsB,yBAMrBA,EAASC,MANY,gCAQ5BC,QAAQC,IAAI,SARgB,yDAAH,qDAYhBC,EAAO,mCAAG,WAAMC,GAAN,gGAEIN,EAAAA,EAAAA,IAAA,6CACiBM,GACtCZ,GAJiB,cAEbO,EAFa,yBAMZA,EAASC,MANG,gCAQnBC,QAAQC,IAAI,SARO,yDAAH,sDAYPG,EAAY,mCAAG,WAAMC,GAAN,gGAEDR,EAAAA,EAAAA,IAAA,0DAC8BQ,EAD9B,8CAErBd,GAJsB,cAElBO,EAFkB,yBAMjBA,EAASC,MANQ,gCAQxBC,QAAQC,IAAI,SARY,yDAAH,qD,iLC/BZK,EAAYC,EAAAA,GAAAA,IAAH,ydAmBTC,EAASD,EAAAA,GAAAA,OAAH,uXAeNE,EAAOF,EAAAA,GAAAA,KAAH,0CAGJG,EAAQH,EAAAA,GAAAA,MAAH,wLAWLI,EAAWJ,EAAAA,GAAAA,GAAH,sJAQRK,EAAcL,EAAAA,GAAAA,IAAH,qbAiBXM,EAAUN,EAAAA,GAAAA,IAAH,yCAGPO,EAAWP,EAAAA,GAAAA,KAAH,8DAIRQ,GAAWR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAH,kD,SCuBrB,EA3FmB,WACjB,OAAwCU,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BC,EAAAA,EAAAA,UACM,OAA9BF,EAAaG,IAAI,SAAoBH,EAAaG,IAAI,SAAW,IADnE,eAAOhB,EAAP,KAAciB,EAAd,KAGA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACMC,EAAWP,EAAaG,IAAI,SAC5BK,GAAWC,EAAAA,EAAAA,OAIjBC,EAAAA,EAAAA,YAAU,WACR,GAAiB,KAAbH,EAAJ,CAGA,IAAMI,EAAQ,mCAAG,8GAEUzB,EAAAA,EAAAA,IAAaqB,GAFvB,UAGkB,KADzB3B,EAFO,QAGAgC,cAHA,uBAIX9B,QAAQC,IAAI,iCAJD,0BAObuB,EAAS1B,EAASiC,SAPL,2EASN/B,QAAQC,IAAR,+BATM,0DAAH,qDAad4B,GAdC,CAeF,GAAE,CAACJ,IAeJ,OACE,iCACE,SAACnB,EAAD,WACE,UAACG,EAAD,CAAMuB,OAAO,GAAGC,SAhBD,SAAAC,GACnBA,EAAEC,iBACG9B,EAAM+B,QAGXjB,EAAgB,CAAEd,MAAOA,GAC1B,EAUK,WACE,SAACK,EAAD,CACE2B,KAAK,OACLC,YAAY,cACZC,MAAOlC,EACPmC,SAbW,SAAAN,GACnB,IAAMO,EAAOP,EAAEQ,OAAOH,MACtBjB,EAASmB,EACV,KAYO,SAACjC,EAAD,CAAQ6B,KAAK,iBAGjB,0BACE,SAAC1B,EAAD,UACGY,GACCA,EAAMoB,KAAI,SAAAF,GACR,OACE,yBACE,SAAC1B,EAAD,CAAU6B,GAAE,UAAKH,EAAKI,IAAMC,MAAO,CAAEC,KAAMrB,GAA3C,UACE,UAACd,EAAD,WACwB,OAArB6B,EAAKO,cACJ,SAACnC,EAAD,CACEoC,IA1DT,kCA0DuBR,EAAKO,YACnBE,IAAKT,EAAKU,QAGQ,OAArBV,EAAKO,cACJ,iCACE,SAACnC,EAAD,CACEoC,IAAI,8CACJC,IAAKT,EAAKU,SAEZ,uBAAG,wBAGP,SAACrC,EAAD,UAAW2B,EAAKU,cAlBbV,EAAKI,GAuBjB,UAKZ,ECjGD,EAPoB,WAClB,OACE,0BACE,SAAC,EAAD,KAGL,C","sources":["components/Api/Api.js","components/SearchFilm/SearchFilm.style.js","components/SearchFilm/Search.film.jsx","pages/SearchFilms.jsx"],"sourcesContent":["import axios from 'axios';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3MGExY2NmOTA3MDI1YTFhNjQ2YjY3NGQzYTUzYmQ2NCIsInN1YiI6IjYzMWI5YTUxMzNhZDhmMDA3Y2M3MTNkOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.2mQcyao_Za4Ql2NiFv5nKFMgxj2ZYf1j8hkeGYdnN2s',\n  },\n};\n\nexport const getFilmsTrending = async () => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/trending/all/day?language=en-US',\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.log('error');\n  }\n};\n\nexport const getFilm = async movie_id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movie_id}`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.log('error');\n  }\n};\n\nexport const getFilmQuery = async query => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.log('error');\n  }\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const SearchBar = styled.div`\n  top: 0;\n  left: 0;\n  z-index: 1000;\n  position: sticky;\n  margin-bottom: 30px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\nexport const Button = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://img.icons8.com/ios/50/search--v4.png');\n  background-size: 60%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n`;\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n`;\n\nexport const CardList = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  align-items: center;\n  list-style: none;\n  padding: 0;\n`;\nexport const CardWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 200px;\n  margin: 10px;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  cursor: pointer;\n  &:hover {\n    transform: scale(1.02);\n  }\n`;\n\nexport const ImgItem = styled.img`\n  width: 200px;\n`;\nexport const CardText = styled.span`\n  color: black;\n  margin: 5px 10px;\n`;\nexport const CardLink = styled(NavLink)`\n  text-decoration: none;\n`;\n","import { useSearchParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getFilmQuery } from 'components/Api/Api';\nimport {\n  ImgItem,\n  CardWrapper,\n  CardList,\n  CardText,\n  CardLink,\n  SearchBar,\n  Button,\n  Form,\n  Input,\n} from 'components/SearchFilm/SearchFilm.style';\n\nconst SearchFilm = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState(\n    searchParams.get('query') !== null ? searchParams.get('query') : ''\n  );\n  const [films, setFilms] = useState([]);\n  const filmName = searchParams.get('query');\n  const location = useLocation();\n\n  const poster = 'https://image.tmdb.org/t/p/w500';\n\n  useEffect(() => {\n    if (filmName === '') {\n      return;\n    }\n    const fetchImg = async () => {\n      try {\n        const response = await getFilmQuery(filmName);\n        if (response.total_results === 0) {\n          console.log('💩 No results found');\n          return;\n        }\n        setFilms(response.results);\n      } catch (error) {\n        return console.log(`🐷 ${error}`);\n      }\n    };\n\n    fetchImg();\n  }, [filmName]);\n\n  const onSubmitFilm = e => {\n    e.preventDefault();\n    if (!query.trim()) {\n      return;\n    }\n    setSearchParams({ query: query });\n  };\n\n  const onChangeFilm = e => {\n    const film = e.target.value;\n    setQuery(film);\n  };\n\n  return (\n    <>\n      <SearchBar>\n        <Form action=\"\" onSubmit={onSubmitFilm}>\n          <Input\n            type=\"text\"\n            placeholder=\"Search film\"\n            value={query}\n            onChange={onChangeFilm}\n          />\n          <Button type=\"submit\"></Button>\n        </Form>\n      </SearchBar>\n      <div>\n        <CardList>\n          {films &&\n            films.map(film => {\n              return (\n                <li key={film.id}>\n                  <CardLink to={`${film.id}`} state={{ from: location }}>\n                    <CardWrapper>\n                      {film.poster_path !== null && (\n                        <ImgItem\n                          src={poster + film.poster_path}\n                          alt={film.title}\n                        />\n                      )}\n                      {film.poster_path === null && (\n                        <>\n                          <ImgItem\n                            src=\"https://img.icons8.com/clouds/100/image.png\"\n                            alt={film.title}\n                          />\n                          <p>Image not found</p>\n                        </>\n                      )}\n                      <CardText>{film.title}</CardText>\n                    </CardWrapper>\n                  </CardLink>\n                </li>\n              );\n            })}\n        </CardList>\n      </div>\n    </>\n  );\n};\nexport default SearchFilm;\n","import SearchFilm from 'components/SearchFilm/Search.film';\nconst SearchFilms = () => {\n  return (\n    <div>\n      <SearchFilm />\n    </div>\n  );\n};\nexport default SearchFilms;\n"],"names":["options","method","headers","accept","Authorization","getFilmsTrending","axios","response","data","console","log","getFilm","movie_id","getFilmQuery","query","SearchBar","styled","Button","Form","Input","CardList","CardWrapper","ImgItem","CardText","CardLink","NavLink","useSearchParams","searchParams","setSearchParams","useState","get","setQuery","films","setFilms","filmName","location","useLocation","useEffect","fetchImg","total_results","results","action","onSubmit","e","preventDefault","trim","type","placeholder","value","onChange","film","target","map","to","id","state","from","poster_path","src","alt","title"],"sourceRoot":""}