{"version":3,"file":"static/js/259.499b4161.chunk.js","mappings":"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","sources":["components/Api/Api.js","components/TrendingFilms/TrendingFilms.style.js","components/TrendingFilms/TrendingFilms.jsx","Modal/Modal.style.js","Modal/Modal.jsx","components/CardFilm/CardFilm.style.js","components/CardFilm/CardFilm.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3MGExY2NmOTA3MDI1YTFhNjQ2YjY3NGQzYTUzYmQ2NCIsInN1YiI6IjYzMWI5YTUxMzNhZDhmMDA3Y2M3MTNkOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.2mQcyao_Za4Ql2NiFv5nKFMgxj2ZYf1j8hkeGYdnN2s',\n  },\n};\n\nexport const getFilmsTrending = async () => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/trending/all/day?language=en-US',\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.log('error');\n  }\n};\n\nexport const getFilm = async movie_id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movie_id}`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.log('error');\n  }\n};\n\nexport const getFilmQuery = async query => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.log('error');\n  }\n};\n","import styled from 'styled-components';\n\nexport const FilmTitle = styled.h2`\n  text-align: center;\n`;\nexport const FilmList = styled.ul`\n  display: flex;\n  justify-content: space-around;\n  flex-wrap: wrap;\n  align-items: center;\n  padding: 0;\n  width: 100%;\n  list-style: none;\n`;\nexport const FilmItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 10px;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  cursor: pointer;\n  &:hover {\n    transform: scale(1.02);\n  }\n`;\n\nexport const FilmImg = styled.img`\n  max-width: 360px;\n`;\n","import { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\n\nimport { getFilmsTrending } from 'components/Api/Api';\nimport {\n  FilmList,\n  FilmItem,\n  FilmImg,\n  FilmTitle,\n} from 'components/TrendingFilms/TrendingFilms.style';\n\nconst TrendingFilms = ({ onClickIdFilm }) => {\n  const [trendingFilms, setTrendingFilms] = useState([]);\n\n  const poster = 'https://image.tmdb.org/t/p/w500';\n  useEffect(() => {\n    const fetchImg = async () => {\n      try {\n        const response = await getFilmsTrending();\n        if (response.total_results === 0) {\n          toast.error('💩 No results found');\n        }\n        setTrendingFilms(response.results);\n      } catch (error) {\n        toast.warn(`🐷 ${error}`);\n      }\n    };\n    fetchImg();\n  }, []);\n  return (\n    <section>\n      <FilmTitle>Trending Films</FilmTitle>\n      <FilmList>\n        {trendingFilms &&\n          trendingFilms.map(film => {\n            return (\n              <FilmItem key={film.id} id={film.id} onClick={onClickIdFilm}>\n                <FilmImg src={poster + film.poster_path} alt=\"\" />\n                <span>\n                  {film.original_title ?? 'No name' ?? film.original_title}\n                </span>\n              </FilmItem>\n            );\n          })}\n      </FilmList>\n    </section>\n  );\n};\nexport default TrendingFilms;\n","import styled from 'styled-components';\n\nexport const ModalBасkdrор = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.7);\n`;\nexport const ModalContent = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  min-height: 300px;\n  max-width: 600px;\n  width: 100%;\n  padding: 12px;\n  background-color: black;\n  border-radius: 3px;\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),\n    Opx 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n`;\n","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport { ModalBасkdrор, ModalContent } from 'Modal/Modal.style';\nconst modalRoot = document.querySelector('#modal-root');\nexport class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onCloseBackdrop();\n    }\n  };\n\n  onClickBackdrop = e => {\n    const currentEl = e.currentTarget;\n    const targettEl = e.target;\n\n    if (currentEl === targettEl) {\n      this.props.onCloseBackdrop();\n    }\n  };\n  render() {\n    return createPortal(\n      <>\n        <ModalBасkdrор onClick={this.onClickBackdrop}>\n          <ModalContent>{this.props.children}</ModalContent>\n        </ModalBасkdrор>\n      </>,\n      modalRoot\n    );\n  }\n}\n// портал(createPortal) для модалки вместо z-index\n","import styled from 'styled-components';\n\nexport const WrapperCard = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n`;\nexport const WrapperImg = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  padding: 10px;\n  color: white;\n  width: 50%;\n`;\nexport const WrapperDescriptionFilm = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  padding: 10px;\n  color: white;\n  width: 50%;\n`;\nexport const ListDescriptionFilm = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\nexport const ErorWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\nexport const ErorText = styled.p`\n  color: white;\n  text-align: center;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport { getFilm } from '../Api/Api';\nimport {\n  WrapperCard,\n  WrapperDescriptionFilm,\n  ListDescriptionFilm,\n  WrapperImg,\n  ErorText,\n  ErorWrapper,\n} from './CardFilm.style';\n\nconst CardFilm = () => {\n  const [searchParams] = useSearchParams('');\n  const [film, setFilm] = useState([]);\n  const [error, setError] = useState(false);\n\n  const poster = 'https://image.tmdb.org/t/p/w500';\n  useEffect(() => {\n    const idImg = searchParams.get('id');\n    if (idImg === null) {\n      return;\n    }\n    const fetchImg = async () => {\n      try {\n        const response = await getFilm(idImg);\n        if (response === undefined) {\n          setError(true);\n          return;\n        }\n        setError(false);\n        setFilm([response]);\n      } catch (error) {\n        toast.warn(`🐷 ${error}`);\n      }\n    };\n    fetchImg();\n  }, [searchParams]);\n  return (\n    <>\n      <div>\n        {error && (\n          <ErorWrapper>\n            <img\n              src=\"https://img.icons8.com/clouds/100/image.png\"\n              alt=\"\"\n              height=\"100px\"\n              width=\"100px\"\n            />\n            <ErorText>Films not found</ErorText>\n          </ErorWrapper>\n        )}\n        {film &&\n          film.map(film => {\n            return (\n              <WrapperCard key={film.id} id={film.id}>\n                <WrapperImg>\n                  {film.poster_path !== null && (\n                    <img\n                      src={poster + film.poster_path}\n                      alt=\"\"\n                      height=\"450px\"\n                      width=\"300px\"\n                    />\n                  )}\n                  {film.poster_path === null && (\n                    <>\n                      <img\n                        src=\"https://img.icons8.com/clouds/100/image.png\"\n                        alt=\"\"\n                        height=\"100px\"\n                        width=\"100px\"\n                      />\n                      <p>Image not found</p>\n                    </>\n                  )}\n                </WrapperImg>\n                <WrapperDescriptionFilm>\n                  <h3>{film.title}</h3>\n                  <ListDescriptionFilm>\n                    <li>\n                      {film.budget !== 0 && <p>Budget: {film.budget}$.</p>}\n                      {film.budget === 0 && <p>Budget: no information.</p>}\n                    </li>\n                    <li>\n                      <p>Duration: {film.runtime} minutes.</p>\n                    </li>\n                    <li>\n                      <p>Rating: {film.vote_average}.</p>\n                    </li>\n                    <li>\n                      <p>Overview: {film.overview}</p>\n                    </li>\n                  </ListDescriptionFilm>\n                </WrapperDescriptionFilm>\n              </WrapperCard>\n            );\n          })}\n      </div>\n    </>\n  );\n};\nexport default CardFilm;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport TrendingFilms from 'components/TrendingFilms/TrendingFilms';\nimport { Modal } from 'Modal/Modal';\nimport CardFilm from 'components/CardFilm/CardFilm';\n\nconst Home = () => {\n  const [modalVisible, setModalVisible] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams('');\n\n  useEffect(() => {\n    if (searchParams.get('id') === null) {\n      setModalVisible(false);\n      return;\n    }\n    setModalVisible(true);\n  }, [searchParams]);\n\n  const onClickCard = e => {\n    const id = e.currentTarget.id;\n    const nextParams = id !== '' ? { id } : {};\n    setSearchParams(nextParams);\n  };\n\n  const onCloseBackdrop = () => {\n    setModalVisible(false);\n    setSearchParams('');\n  };\n\n  return (\n    <>\n      <TrendingFilms onClickIdFilm={onClickCard} />\n      {modalVisible && (\n        <Modal onCloseBackdrop={onCloseBackdrop}>\n          <CardFilm />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["options","method","headers","accept","Authorization","getFilmsTrending","axios","response","data","console","log","getFilm","movie_id","getFilmQuery","query","FilmTitle","styled","FilmList","FilmItem","FilmImg","onClickIdFilm","useState","trendingFilms","setTrendingFilms","useEffect","fetchImg","total_results","toast","results","map","film","id","onClick","src","poster_path","alt","original_title","ModalBасkdrор","ModalContent","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","props","onCloseBackdrop","onClickBackdrop","currentTarget","target","window","addEventListener","this","removeEventListener","createPortal","children","Component","WrapperCard","WrapperImg","WrapperDescriptionFilm","ListDescriptionFilm","ErorWrapper","ErorText","useSearchParams","searchParams","setFilm","error","setError","idImg","get","undefined","height","width","title","budget","runtime","vote_average","overview","modalVisible","setModalVisible","setSearchParams"],"sourceRoot":""}