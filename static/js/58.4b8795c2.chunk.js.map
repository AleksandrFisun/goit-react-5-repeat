{"version":3,"file":"static/js/58.4b8795c2.chunk.js","mappings":"qPACMA,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOC,EAAgB,mCAAG,6GAELC,EAAAA,EAAAA,IACrB,+DACAN,GAJ0B,cAEtBO,EAFsB,yBAMrBA,EAASC,MANY,gCAQ5BC,QAAQC,IAAI,SARgB,yDAAH,qDAYhBC,EAAO,mCAAG,WAAMC,GAAN,gGAEIN,EAAAA,EAAAA,IAAA,6CACiBM,GACtCZ,GAJiB,cAEbO,EAFa,yBAMZA,EAASC,MANG,gCAQnBC,QAAQC,IAAI,SARO,yDAAH,sDAYPG,EAAY,mCAAG,WAAMC,GAAN,gGAEDR,EAAAA,EAAAA,IAAA,0DAC8BQ,EAD9B,8CAErBd,GAJsB,cAElBO,EAFkB,yBAMjBA,EAASC,MANQ,gCAQxBC,QAAQC,IAAI,SARY,yDAAH,qD,0JChCZK,EAAcC,EAAAA,GAAAA,IAAH,0CAGXC,EAAWD,EAAAA,GAAAA,EAAH,6D,SCwCrB,EAvC8B,WAC5B,OAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WACR,GAAW,OAAPF,EAAJ,CAGA,IAAMG,EAAQ,mCAAG,8GAEUb,EAAAA,EAAAA,IAAQU,GAFlB,eAGII,KADXlB,EAFO,yDAMba,EAAQ,CAACb,IANI,gDAQbE,QAAQC,IAAR,8BARa,yDAAH,qDAWdc,GAZC,CAaF,GAAE,CAACH,KAGF,8BACGF,GACCA,EAAKO,KAAI,SAAAC,GACP,OACE,UAACZ,EAAD,YACE,UAACE,EAAD,WAAU,iBAAeU,EAAIC,iBAC7B,UAACX,EAAD,WAAU,WAASU,EAAIE,iBACvB,UAACZ,EAAD,WAAU,YAAUU,EAAIG,YACxB,SAACb,EAAD,UAAWU,EAAII,aAJCJ,EAAIN,GAOzB,KAGR,C","sources":["components/Api/Api.js","components/MovieInformation/AdditionalInformation/AdditionalInformation.style.js","components/MovieInformation/AdditionalInformation/AdditionalInformation.jsx"],"sourcesContent":["import axios from 'axios';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3MGExY2NmOTA3MDI1YTFhNjQ2YjY3NGQzYTUzYmQ2NCIsInN1YiI6IjYzMWI5YTUxMzNhZDhmMDA3Y2M3MTNkOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.2mQcyao_Za4Ql2NiFv5nKFMgxj2ZYf1j8hkeGYdnN2s',\n  },\n};\n\nexport const getFilmsTrending = async () => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/trending/all/day?language=en-US',\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.log('error');\n  }\n};\n\nexport const getFilm = async movie_id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movie_id}`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.log('error');\n  }\n};\n\nexport const getFilmQuery = async query => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.log('error');\n  }\n};\n","import styled from 'styled-components';\n\nexport const WrapperInfo = styled.div`\n  padding: 10px;\n`;\nexport const TextInfo = styled.p`\n  margin: 0;\n  margin-bottom: 5px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nimport { getFilm } from '../../Api/Api';\nimport { WrapperInfo, TextInfo } from './AdditionalInformation.style';\n\nconst AdditionalInformation = () => {\n  const [film, setFilm] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    if (id === null) {\n      return;\n    }\n    const fetchImg = async () => {\n      try {\n        const response = await getFilm(id);\n        if (response === undefined) {\n          return;\n        }\n        setFilm([response]);\n      } catch (error) {\n        console.log(`üê∑ ${error}`);\n      }\n    };\n    fetchImg();\n  }, [id]);\n\n  return (\n    <>\n      {film &&\n        film.map(res => {\n          return (\n            <WrapperInfo key={res.id}>\n              <TextInfo>Release date: {res.release_date}</TextInfo>\n              <TextInfo>Rating: {res.vote_average}</TextInfo>\n              <TextInfo>Runtime: {res.runtime}</TextInfo>\n              <TextInfo>{res.overview}</TextInfo>\n            </WrapperInfo>\n          );\n        })}\n    </>\n  );\n};\n\nexport default AdditionalInformation;\n"],"names":["options","method","headers","accept","Authorization","getFilmsTrending","axios","response","data","console","log","getFilm","movie_id","getFilmQuery","query","WrapperInfo","styled","TextInfo","useState","film","setFilm","id","useParams","useEffect","fetchImg","undefined","map","res","release_date","vote_average","runtime","overview"],"sourceRoot":""}